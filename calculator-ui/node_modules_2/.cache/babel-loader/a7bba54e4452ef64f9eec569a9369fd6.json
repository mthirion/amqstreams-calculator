{"ast":null,"code":"var _jsxFileName = \"/development/workspace/internal/ui/myreact-kafka/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { Component, useState, useEffect } from 'react';\nimport CalcForm from './CalcForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    var _s = $RefreshSig$(),\n        _s2 = $RefreshSig$();\n\n    super(props);\n    this.ComputePost = _s(() => {\n      _s();\n\n      const [title, setTitle] = useState('');\n      const [body, setBody] = useState('');\n\n      const getCalc = async (title, body) => {\n        await fetch('https://jsonplaceholder.typicode.com/posts', {\n          method: 'POST',\n          body: JSON.stringify({\n            title: title,\n            body: body,\n            userId: Math.random().toString(36).slice(2)\n          }),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8'\n          }\n        }).then(response => response.json()).then(data => {\n          setPosts(posts => [data, ...posts]);\n          setTitle('');\n          setBody('');\n        }).catch(err => {\n          console.log(err.message);\n        });\n      };\n    }, \"qwG1af4LOHAgcSQ+L8KuMt9FIzc=\");\n    this.ComputeGet = _s2(() => {\n      _s2();\n\n      const [posts, setPosts] = useState([]);\n      useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/posts?_limit=10').then(response => response.json()).then(data => {\n          console.log(data);\n          setPosts(data);\n        }).catch(err => {\n          console.log(err.message);\n        });\n      }, []);\n    }, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const url = \"https://jsonplaceholder.typicode.com/posts\";\n    fetch(url).then(response => response.json()).then(json => this.setState({\n      posts: json\n    }));\n  }\n\n  render() {\n    const {\n      posts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(CalcForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/development/workspace/internal/ui/myreact-kafka/src/App.js"],"names":["logo","React","Component","useState","useEffect","CalcForm","App","constructor","props","ComputePost","title","setTitle","body","setBody","getCalc","fetch","method","JSON","stringify","userId","Math","random","toString","slice","headers","then","response","json","data","setPosts","posts","catch","err","console","log","message","ComputeGet","state","componentDidMount","url","setState","render"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAE1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAA;AAAA;;AACjB,UAAMA,KAAN;AADiB,SAmBnBC,WAnBmB,MAmBL,MAAM;AAAA;;AAElB,YAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,YAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,YAAMW,OAAO,GAAG,OAAOJ,KAAP,EAAcE,IAAd,KAAuB;AACrC,cAAMG,KAAK,CAAC,4CAAD,EAA+C;AAC1DC,UAAAA,MAAM,EAAE,MADkD;AAE1DJ,UAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAe;AACnBR,YAAAA,KAAK,EAAEA,KADY;AAEnBE,YAAAA,IAAI,EAAEA,IAFa;AAGnBO,YAAAA,MAAM,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC;AAHW,WAAf,CAFoD;AAO1DC,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAPiD,SAA/C,CAAL,CAWLC,IAXK,CAWCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAXd,EAYLF,IAZK,CAYCG,IAAD,IAAU;AACdC,UAAAA,QAAQ,CAAEC,KAAD,IAAW,CAACF,IAAD,EAAO,GAAGE,KAAV,CAAZ,CAAR;AACAnB,UAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,UAAAA,OAAO,CAAC,EAAD,CAAP;AACD,SAhBK,EAiBLkB,KAjBK,CAiBEC,GAAD,IAAS;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACD,SAnBK,CAAN;AAoBC,OArBH;AAsBD,KA9CkB;AAAA,SA+CnBC,UA/CmB,OA+CN,MAAM;AAAA;;AACjB,YAAM,CAACN,KAAD,EAAQD,QAAR,IAAoB1B,QAAQ,CAAC,EAAD,CAAlC;AACAC,MAAAA,SAAS,CAAC,MAAM;AACbW,QAAAA,KAAK,CAAC,sDAAD,CAAL,CACIU,IADJ,CACUC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADvB,EAEIF,IAFJ,CAEUG,IAAD,IAAU;AACbK,UAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAC,UAAAA,QAAQ,CAACD,IAAD,CAAR;AACF,SALJ,EAMIG,KANJ,CAMWC,GAAD,IAAS;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACF,SARJ;AASF,OAVQ,EAUN,EAVM,CAAT;AAWD,KA5DkB;AAEjB,SAAKE,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GAAG,4CAAZ;AACAxB,IAAAA,KAAK,CAACwB,GAAD,CAAL,CACCd,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI,KAAKa,QAAL,CAAc;AAAEV,MAAAA,KAAK,EAAEH;AAAT,KAAd,CAFd;AAGD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA;AAAF,QAAY,KAAKO,KAAvB;AACA,wBACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAnByB;;AAgE5B,eAAe/B,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport React, { Component, useState, useEffect } from 'react';\nimport CalcForm from './CalcForm';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n  \n  componentDidMount() {\n    const url = \"https://jsonplaceholder.typicode.com/posts\";\n    fetch(url)\n    .then(response => response.json())\n    .then(json => this.setState({ posts: json }))\n  }\n\n  render() {\n    const { posts } = this.state;\n    return (\n      <CalcForm/>\n    );\n  }\n\n  ComputePost = () => {\n  \n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n\n    const getCalc = async (title, body) => {\n      await fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      body: JSON.stringify({\n        title: title,\n        body: body,\n        userId: Math.random().toString(36).slice(2),\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        setPosts((posts) => [data, ...posts]);\n        setTitle('');\n        setBody('');\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n      };\n  }\n  ComputeGet = () => {\n    const [posts, setPosts] = useState([]);\n    useEffect(() => {\n       fetch('https://jsonplaceholder.typicode.com/posts?_limit=10')\n          .then((response) => response.json())\n          .then((data) => {\n             console.log(data);\n             setPosts(data);\n          })\n          .catch((err) => {\n             console.log(err.message);\n          });\n    }, []);\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}