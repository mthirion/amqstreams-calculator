{"ast":null,"code":"var _jsxFileName = \"/development/workspace/internal/ui/myreact-kafka/src/KafkaClusterDetails.js\";\nimport './KafkaClusterDetails.css';\nimport React, { Component, useState, useEffect, setState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass KafkaClusterDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onThroughputSelectChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      }); // we need to adject the 'checked' value of th radio button for the next rendering\n\n      if (e.target.value === \"thru\") {\n        this.state.throuhputdefault = true;\n        this.state.displayDisableThroughputBox = false;\n        this.state.DisplayMessagesRateAreHidden = true;\n      }\n\n      if (e.target.value === \"msgsec\") {\n        this.state.throuhputdefault = false;\n        this.state.displayDisableThroughputBox = true;\n        this.state.DisplayMessagesRateAreHidden = false;\n        document.getElementById(\"inrate\").value = this.state.req_inthroughput;\n      }\n    };\n\n    this.displayComputedThroughput = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n\n      switch (e.target.name) {\n        case \"nbmessages\":\n          this.state.nbmessages = e.target.value;\n          break;\n\n        case \"messagesize\":\n          this.state.messagesize = e.target.value;\n          break;\n\n        case \"msg-time-unit\":\n          if (e.target.value == \"sec\") //TODO: hour, day\n            this.state.msgtimeunit = 1;\n          if (e.target.value == \"min\") //TODO: hour, day\n            this.state.msgtimeunit = 60;\n          break;\n\n        case \"msg-size-unit\":\n          if (e.target.value == \"bytes\") //TODO: ?\n            this.state.msgsizeunit = 1 / 1000000;\n          if (e.target.value == \"kbytes\") //TODO: ?\n            this.state.msgsizeunit = 1 / 1000;\n          break;\n\n        default:\n          break;\n      }\n\n      ;\n      this.state.req_inthroughput = this.state.nbmessages * this.state.msgtimeunit * this.state.messagesize * this.state.msgsizeunit;\n      document.getElementById(\"inrate\").value = this.state.req_inthroughput;\n    };\n\n    this.onNetSelectChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n\n      if (e.target.value === \"1\") {\n        this.state.net10default = false;\n        this.state.req_netspeed = 1;\n      }\n\n      if (e.target.value === \"10\") {\n        this.state.net10default = true;\n        this.state.req_netspeed = 10;\n      }\n    };\n\n    this.onDiskChoiceChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n\n      if (e.target.value === \"auto\") {\n        document.getElementById(\"diskautodiv\").hidden = false;\n        document.getElementById(\"diskcustdiv\").hidden = true;\n        document.getElementById(\"diskpara\").hidden = false;\n      }\n\n      if (e.target.value === \"custom\") {\n        document.getElementById(\"diskautodiv\").hidden = true;\n        document.getElementById(\"diskcustdiv\").hidden = false;\n        document.getElementById(\"diskpara\").hidden = true;\n      }\n    };\n\n    this.onDiskTypeChange = e => {\n      switch (e.target.value) {\n        case \"ussd\":\n          document.getElementById(\"disk-ussd\").checked = true;\n          break;\n\n        case \"ssd\":\n          document.getElementById(\"disk-ssd\").checked = true;\n          break;\n\n        case \"uhigh\":\n          document.getElementById(\"disk-uhigh\").checked = true;\n          break;\n\n        case \"high\":\n          document.getElementById(\"disk-high\").checked = true;\n          break;\n      }\n    };\n\n    this.onConsumersChoiceChange = e => {\n      if (e.target.value === \"cgratio\") {\n        document.getElementById(\"cgabsdiv\").hidden = false;\n        document.getElementById(\"cgcustdiv\").hidden = true;\n      }\n\n      if (e.target.value === \"cgtopic\") {\n        document.getElementById(\"cgabsdiv\").hidden = true;\n        document.getElementById(\"cgcustdiv\").hidden = false;\n      }\n    };\n\n    this.onLagChoiceChange = e => {\n      if (e.target.value === \"lagauto\") {\n        document.getElementById(\"lagvaldiv\").hidden = true;\n        document.getElementById(\"lagautodiv\").hidden = false;\n      }\n\n      if (e.target.value === \"lagval\") {\n        document.getElementById(\"lagvaldiv\").hidden = false;\n        document.getElementById(\"lagautodiv\").hidden = true;\n      }\n    };\n\n    this.onLagtypeChange = e => {\n      switch (e.target.value) {\n        case \"lag-pod\":\n          document.getElementById(\"lag-pod\").checked = true;\n\n        case \"lag-vm\":\n          document.getElementById(\"lag-vm\").checked = true;\n          break;\n\n        case \"lag-func\":\n          document.getElementById(\"lag-func\").checked = true;\n          break;\n      }\n    };\n\n    this.onAccChoiceChange = e => {\n      if (e.target.value === \"varacc\") {\n        document.getElementById(\"varacc\").checked = true;\n        document.getElementById(\"fixacc\").checked = false;\n        document.getElementById(\"varaccdiv\").hidden = false;\n        document.getElementById(\"fixaccdiv\").hidden = true;\n      }\n\n      if (e.target.value === \"fixacc\") {\n        document.getElementById(\"fixacc\").checked = true;\n        document.getElementById(\"varacc\").checked = false;\n        document.getElementById(\"varaccdiv\").hidden = true;\n        document.getElementById(\"fixaccdiv\").hidden = false;\n      }\n    };\n\n    this.state = {};\n    this.state.resp_brokercpu = props.broker_cpu;\n    this.state.resp_brokernb = props.broker_nb;\n    this.state.resp_brokermem = props.broker_mem;\n    this.state.resp_storage = props.cluster_sto;\n    console.log(\"IN CPU = \" + this.state.resp_brokercpu);\n  }\n\n  componentDidMount() {}\n  /** \n     render() is the main method of the component\n     it is where the page html is displayed\n     with the binding to the functions that will react to page events\n  */\n\n\n  render() {\n    // some logic can be added here to compute dynamic value before the return method is called\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Red Hat AMQStreams target cluster details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.resp_brokercpu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this);\n  } // this function is linked to the radio buttons of the \"throughput\" section\n  // we adjust the display according to the selected radio button\n  // in the memory (setState, which is initialized in the constructor), we store the name and the value of the event\n  // the name is the name of the radio button, and the value is the value of the radio button from the radio button definition\n  // the event.target contains both.  it's also possible to use e.target.name ; e.target.value\n  // the re-rendering is automated  \n\n\n}\n\nexport default KafkaClusterDetails;","map":{"version":3,"sources":["/development/workspace/internal/ui/myreact-kafka/src/KafkaClusterDetails.js"],"names":["React","Component","useState","useEffect","setState","KafkaClusterDetails","constructor","props","onThroughputSelectChange","e","name","value","target","state","throuhputdefault","displayDisableThroughputBox","DisplayMessagesRateAreHidden","document","getElementById","req_inthroughput","displayComputedThroughput","nbmessages","messagesize","msgtimeunit","msgsizeunit","onNetSelectChange","net10default","req_netspeed","onDiskChoiceChange","hidden","onDiskTypeChange","checked","onConsumersChoiceChange","onLagChoiceChange","onLagtypeChange","onAccChoiceChange","resp_brokercpu","broker_cpu","resp_brokernb","broker_nb","resp_brokermem","broker_mem","resp_storage","cluster_sto","console","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import './KafkaClusterDetails.css';\n\nimport React, { Component, useState, useEffect, setState  } from 'react';\n\nclass KafkaClusterDetails extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n\n    this.state.resp_brokercpu=props.broker_cpu;\n    this.state.resp_brokernb=props.broker_nb;\n    this.state.resp_brokermem=props.broker_mem;\n    this.state.resp_storage=props.cluster_sto;\n\n    console.log(\"IN CPU = \" + this.state.resp_brokercpu);\n  }\n\n  componentDidMount() {\n    \n  }\n\n\n  /** \n     render() is the main method of the component\n     it is where the page html is displayed\n     with the binding to the functions that will react to page events\n  */\n  render() {\n\n    // some logic can be added here to compute dynamic value before the return method is called\n\n        return (\n  \n          <div className=\"container\">\n            <h1 className=\"title\">Red Hat AMQStreams target cluster details</h1>\n\n            <h1>{this.state.resp_brokercpu}</h1>  \n          </div>\n       )\n  \n  }\n\n\n  // this function is linked to the radio buttons of the \"throughput\" section\n  // we adjust the display according to the selected radio button\n  // in the memory (setState, which is initialized in the constructor), we store the name and the value of the event\n  // the name is the name of the radio button, and the value is the value of the radio button from the radio button definition\n  // the event.target contains both.  it's also possible to use e.target.name ; e.target.value\n  // the re-rendering is automated  \n  onThroughputSelectChange = (e) => {\n    \n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n\n    // we need to adject the 'checked' value of th radio button for the next rendering\n    if (e.target.value===\"thru\") {\n        this.state.throuhputdefault=true;\n        this.state.displayDisableThroughputBox=false;\n        this.state.DisplayMessagesRateAreHidden=true;\n    }\n    if (e.target.value===\"msgsec\") {\n        this.state.throuhputdefault=false;\n        this.state.displayDisableThroughputBox=true;\n        this.state.DisplayMessagesRateAreHidden=false;\n        document.getElementById(\"inrate\").value = this.state.req_inthroughput;\n    }\n  }\n\n  displayComputedThroughput = (e) => {    \n    \n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });  \n\n    switch (e.target.name) {\n        case \"nbmessages\": \n            this.state.nbmessages = e.target.value;\n            break;\n        case \"messagesize\":\n            this.state.messagesize = e.target.value;\n            break;\n        case \"msg-time-unit\": \n            if (e.target.value==\"sec\")  //TODO: hour, day\n                this.state.msgtimeunit = 1;      \n            if (e.target.value==\"min\")  //TODO: hour, day\n                this.state.msgtimeunit = 60;\n            break;\n        case \"msg-size-unit\": \n            if (e.target.value==\"bytes\")  //TODO: ?\n                this.state.msgsizeunit = 1/1000000;\n            if (e.target.value==\"kbytes\")  //TODO: ?\n                this.state.msgsizeunit = 1/1000;  \n            break;\n        default: break;\n    };\n    \n    this.state.req_inthroughput = this.state.nbmessages * this.state.msgtimeunit * this.state.messagesize * this.state.msgsizeunit;\n    document.getElementById(\"inrate\").value = this.state.req_inthroughput;\n  };     \n  \n\n  onNetSelectChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n    if (e.target.value===\"1\") {\n        this.state.net10default=false;\n        this.state.req_netspeed=1;\n    }\n    if (e.target.value===\"10\") {\n        this.state.net10default=true;\n        this.state.req_netspeed=10;\n    }    \n  }\n\n  onDiskChoiceChange = (e) => {\n\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n    if (e.target.value===\"auto\") {\n        document.getElementById(\"diskautodiv\").hidden=false;\n        document.getElementById(\"diskcustdiv\").hidden=true;\n        document.getElementById(\"diskpara\").hidden=false;\n    }\n    if (e.target.value===\"custom\") {\n        document.getElementById(\"diskautodiv\").hidden=true; \n        document.getElementById(\"diskcustdiv\").hidden=false;\n        document.getElementById(\"diskpara\").hidden=true;\n    }\n}\n\n  onDiskTypeChange = (e) => {\n\n    switch (e.target.value) {\n        case \"ussd\": document.getElementById(\"disk-ussd\").checked = true; break;\n        case \"ssd\": document.getElementById(\"disk-ssd\").checked = true; break;\n        case \"uhigh\": document.getElementById(\"disk-uhigh\").checked = true; break;\n        case \"high\": document.getElementById(\"disk-high\").checked = true; break;\n      }\n  }\n\n  onConsumersChoiceChange = (e) => {\n\n    if (e.target.value===\"cgratio\") {\n        document.getElementById(\"cgabsdiv\").hidden = false;\n        document.getElementById(\"cgcustdiv\").hidden = true;\n    }\n    \n    if (e.target.value===\"cgtopic\") {\n        document.getElementById(\"cgabsdiv\").hidden = true;\n        document.getElementById(\"cgcustdiv\").hidden = false;\n    }\n  }\n\n  onLagChoiceChange = (e) => {\n\n    if (e.target.value===\"lagauto\") {\n        document.getElementById(\"lagvaldiv\").hidden = true; \n        document.getElementById(\"lagautodiv\").hidden = false;\n    }\n    if (e.target.value===\"lagval\") {\n        document.getElementById(\"lagvaldiv\").hidden = false; \n        document.getElementById(\"lagautodiv\").hidden = true;\n    }\n  }\n\n  onLagtypeChange = (e) => {\n\n    switch (e.target.value) {\n        case \"lag-pod\": document.getElementById(\"lag-pod\").checked = true; \n        case \"lag-vm\": document.getElementById(\"lag-vm\").checked = true; break;\n        case \"lag-func\": document.getElementById(\"lag-func\").checked = true; break;\n    }\n      \n  }\n\n  onAccChoiceChange = (e) => {\n \n    if (e.target.value===\"varacc\") {\n        document.getElementById(\"varacc\").checked = true; \n        document.getElementById(\"fixacc\").checked = false; \n        document.getElementById(\"varaccdiv\").hidden = false;\n        document.getElementById(\"fixaccdiv\").hidden = true;\n    }\n    if (e.target.value===\"fixacc\") {\n        document.getElementById(\"fixacc\").checked = true; \n        document.getElementById(\"varacc\").checked = false; \n        document.getElementById(\"varaccdiv\").hidden = true;\n        document.getElementById(\"fixaccdiv\").hidden = false;        \n    } \n  }  \n} \n\nexport default KafkaClusterDetails;"]},"metadata":{},"sourceType":"module"}