{"ast":null,"code":"var _jsxFileName = \"/development/workspace/internal/ui/myreact-kafka/src/CalcForm.js\";\nimport './CalcForm.css';\nimport React, { Component, useState, useEffect, setState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CalcForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onThroughputSelectChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      }); // we need to adject the 'checked' value of th radio button for the next rendering\n\n      if (e.target.value === \"thru\") {\n        this.state.throuhputdefault = true;\n        this.state.displayDisableThroughputBox = false;\n        this.state.DisplayMessagesRateAreHidden = true;\n      }\n\n      if (e.target.value === \"msgsec\") {\n        this.state.throuhputdefault = false;\n        this.state.displayDisableThroughputBox = true;\n        this.state.DisplayMessagesRateAreHidden = false;\n        document.getElementById(\"inrate\").value = this.state.req_inthroughput;\n      }\n    };\n\n    this.displayComputedThroughput = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n\n      switch (e.target.name) {\n        case \"nbmessages\":\n          this.state.nbmessages = e.target.value;\n          break;\n\n        case \"messagesize\":\n          this.state.messagesize = e.target.value;\n          break;\n\n        case \"msg-time-unit\":\n          if (e.target.value == \"sec\") //TODO: hour, day\n            this.state.msgtimeunit = 1;\n          if (e.target.value == \"min\") //TODO: hour, day\n            this.state.msgtimeunit = 60;\n          break;\n\n        case \"msg-size-unit\":\n          if (e.target.value == \"bytes\") //TODO: ?\n            this.state.msgsizeunit = 1 / 1000000;\n          if (e.target.value == \"kbytes\") //TODO: ?\n            this.state.msgsizeunit = 1 / 1000;\n          break;\n\n        default:\n          break;\n      }\n\n      ;\n      this.state.req_inthroughput = this.state.nbmessages * this.state.msgtimeunit * this.state.messagesize * this.state.msgsizeunit;\n      document.getElementById(\"inrate\").value = this.state.req_inthroughput;\n    };\n\n    this.onNetSelectChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n\n      if (e.target.value === \"1\") {\n        this.state.net10default = false;\n        this.state.req_netspeed = 1;\n      }\n\n      if (e.target.value === \"10\") {\n        this.state.net10default = true;\n        this.state.req_netspeed = 10;\n      }\n    };\n\n    this.onDiskChoiceChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n\n      if (e.target.value === \"auto\") {\n        this.state.diskAutoDefault = true;\n        this.state.DisplayAutoDiskHidden = false;\n      }\n\n      if (e.target.value === \"custom\") {\n        this.state.diskAutoDefault = false;\n        this.state.DisplayAutoDiskHidden = true;\n      }\n    };\n\n    this.onDiskTypeChange = e => {\n      switch (e.target.value) {\n        case \"ussd\":\n          document.getElementById(\"disk-ussd\").checked = true;\n          break;\n\n        case \"ssd\":\n          document.getElementById(\"disk-ssd\").checked = true;\n          break;\n\n        case \"uhigh\":\n          document.getElementById(\"disk-uhigh\").checked = true;\n          break;\n\n        case \"high\":\n          document.getElementById(\"disk-high\").checked = true;\n          break;\n      }\n    };\n\n    this.onConsumersChoiceChange = e => {};\n\n    this.callKafkaCalculator = () => {\n      fetch('http://localhost:8090/api/kafkasizing', {\n        method: 'POST',\n        body: JSON.stringify({\n          inbound_throughput: this.state.req_inthroughput,\n          replicas: this.state.req_replicas,\n          netspeed: this.state.req_netspeed,\n          netpercent: this.state.req_netpercent,\n          diskspeed: this.state.req_diskspeed,\n          diskpercent: this.state.req_diskpercent,\n          consumers: this.state.req_consumers\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        console.log(data.topicDesc.consumers); //setPosts((posts) => [data, ...posts]);\n        //setTitle('');\n        //setBody('');\n      }).catch(err => {\n        console.log(err.message);\n      });\n    };\n\n    this.state = {};\n    this.initDisplayStates();\n    this.initRequestStates();\n    this.initResponseStates();\n    this.initComputingDisplayStates();\n  }\n\n  initDisplayStates() {\n    this.state.throuhputdefault = true;\n    this.state.displayDisableThroughputBox = false;\n    this.state.DisplayMessagesRateAreHidden = true;\n    this.state.net10default = true;\n    this.state.diskAutoDefault = true;\n    this.state.DisplayAutoDisHidden = false;\n    this.state.diskSSDDefault = true;\n    this.state.DisplayTopicConsumersHidden = true;\n  }\n\n  initRequestStates() {\n    this.state.req_inthroughput = 0;\n    this.state.req_replicas = 3;\n    this.state.req_netspeed = 10;\n    this.state.req_netpercent = 80;\n    this.state.req_diskspeed = 400;\n    this.state.req_diskpercent = 80;\n    this.state.req_consumers = 5;\n  }\n\n  initResponseStates() {\n    this.state.resp_inthroughput = 0;\n    this.state.resp_replicas = 3;\n    this.state.resp_netspeed = 10;\n    this.state.resp_netpercent = 80;\n    this.state.resp_diskspeed = 400;\n    this.state.resp_diskpercent = 80;\n    this.state.resp_consumers = 5;\n  }\n\n  initComputingDisplayStates() {\n    this.state.msgtimeunit = 1; // default = second\n\n    this.state.msgsizeunit = 1 / 1000; // default = kilobytes\n\n    this.state.nbmessages = 0;\n    this.state.messagesize = 0;\n  }\n\n  componentDidMount() {\n    document.getElementById(\"disk-ssd\").checked = true;\n    document.getElementById(\"custcg\").checked = true;\n  }\n  /** \n     render() is the main method of the component\n     it is where the page html is displayed\n     with the binding to the functions that will react to page events\n  */\n\n\n  render() {\n    // some logic can be added here to compute dynamic value before the return method is called\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Red Hat AMQStreams sizing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        class: \"throughput\",\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Inbound throughput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"throughput-msg\",\n          name: \"throughput\",\n          value: \"msgsec\",\n          onClick: this.onThroughputSelectChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"label-space\",\n          for: \"throughput-msg\",\n          children: \"message based\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 90\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"throughput-absolute\",\n          name: \"throughput\",\n          value: \"thru\",\n          checked: this.state.throuhputdefault,\n          onClick: this.onThroughputSelectChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"label-space\",\n          for: \"throughput-absolute\",\n          children: \" absolute value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 97\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"align-absthroughput\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"label-space\",\n              for: \"inboundrate\",\n              children: \"Throughput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              class: \"space-throughput\",\n              type: \"text\",\n              size: \"8\",\n              name: \"inboundrate\",\n              id: \"inrate\",\n              disabled: this.state.displayDisableThroughputBox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"t-in\",\n              children: \"MB/sec\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"align-custthroughput\",\n          hidden: this.state.DisplayMessagesRateAreHidden,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"label-space\",\n              for: \"nbmessages\",\n              children: \"Number of messages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              class: \"space-nbmessages\",\n              type: \"text\",\n              size: \"8\",\n              value: this.state.nbmessages,\n              name: \"nbmessages\",\n              id: \"nbmessages\",\n              onInput: this.displayComputedThroughput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              class: \"space-units\",\n              name: \"msg-time-unit\",\n              id: \"msg-time-unit\",\n              onChange: this.displayComputedThroughput,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"sec\",\n                children: \"msg/sec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"min\",\n                children: \"msg/min\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"label-space\",\n              for: \"messagesize\",\n              children: \"Average message size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              class: \"space-units\",\n              type: \"text\",\n              size: \"8\",\n              value: this.state.messagesize,\n              name: \"messagesize\",\n              id: \"messagesize\",\n              onInput: this.displayComputedThroughput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              class: \"space-units\",\n              name: \"msg-size-unit\",\n              defaultValue: \"kbytes\",\n              id: \"msg-size-unit\",\n              onChange: this.displayComputedThroughput,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"bytes\",\n                children: \"bytes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"kbytes\",\n                children: \"KB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        class: \"network\",\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Network Adapter Capabilities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"net\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"net-speed-1\",\n            name: \"netspeed\",\n            value: \"1\",\n            onClick: this.onNetSelectChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"label-space\",\n            for: \"net-speed-1\",\n            children: \"1 Gbps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"net-space\",\n            type: \"radio\",\n            id: \"net-peed-10\",\n            name: \"netspeed\",\n            value: \"10\",\n            checked: this.state.net10default,\n            onClick: this.onNetSelectChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"label-space\",\n            for: \"net-speed-10\",\n            children: \"10 Gbps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"label-space\",\n          for: \"netsaturation\",\n          children: \"Network saturation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"space-units\",\n          type: \"number\",\n          min: \"1\",\n          max: \"100\",\n          size: \"4\",\n          defaultValue: \"80\",\n          name: \"netsaturation\",\n          id: \"netsaturation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"label-space\",\n          for: \"netsaturation\",\n          children: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        class: \"disks\",\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"I/O speed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"disk\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"disk-choice1\",\n            name: \"diskchoice\",\n            value: \"auto\",\n            checked: this.state.diskAutoDefault,\n            onClick: this.onDiskChoiceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"label-space\",\n            for: \"disk-choice1\",\n            children: \"auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"net-space\",\n            type: \"radio\",\n            id: \"disk-choice2\",\n            name: \"diskchoice\",\n            value: \"custom\",\n            onClick: this.onDiskChoiceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"label-space\",\n            for: \"disk-choice2\",\n            children: \"custom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"align-disks\",\n          hidden: this.state.DisplayAutoDiskHidden,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"disk-ussd\",\n            name: \"disktype\",\n            value: \"ussd\",\n            onClick: this.onDiskTypeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"label-space\",\n            for: \"disk-ussd\",\n            children: \"Xtreme (1000MB/s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"disk-space\",\n            type: \"radio\",\n            id: \"disk-ssd\",\n            name: \"disktype\",\n            value: \"ssd\",\n            onClick: this.onDiskTypeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"label-space\",\n            for: \"disk-ssd\",\n            children: \"SSD (400MB/s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"disk-space\",\n            type: \"radio\",\n            id: \"disk-uhigh\",\n            name: \"disktype\",\n            value: \"uhigh\",\n            onClick: this.onDiskTypeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"label-space\",\n            for: \"disk-uhigh\",\n            children: \"Ultra I/O (250MB/s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"disk-space\",\n            type: \"radio\",\n            id: \"disk-high\",\n            name: \"disktype\",\n            value: \"high\",\n            onClick: this.onDiskTypeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"label-space\",\n            for: \"disk-high\",\n            children: \"High I/O (150MB/s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"disk-space\",\n            type: \"radio\",\n            id: \"disk-std\",\n            name: \"disktype\",\n            value: \"std\",\n            onClick: this.onDiskTypeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"label-space\",\n            for: \"disk-std\",\n            children: \"Standard (50MB/s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"label-space\",\n          for: \"nbdisks\",\n          children: \"Number of disk in parallel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"space-units\",\n          type: \"number\",\n          min: \"1\",\n          max: \"10\",\n          size: \"4\",\n          defaultValue: \"1\",\n          name: \"nbdisks\",\n          id: \"nbdisks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"label-space\",\n          for: \"disksaturation\",\n          children: \"I/O saturation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"space-units\",\n          type: \"number\",\n          min: \"1\",\n          max: \"100\",\n          size: \"4\",\n          defaultValue: \"80\",\n          name: \"disksaturation\",\n          id: \"disksaturation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"label-space\",\n          for: \"disksaturation\",\n          children: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        class: \"consumers\",\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Messages delivery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"consumers\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"abscg\",\n            name: \"cg\",\n            value: \"ratio\",\n            onClick: this.onConsumersChoiceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"label-space\",\n            for: \"abscg\",\n            children: \"ratio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"cg-space\",\n            type: \"radio\",\n            id: \"custcg\",\n            name: \"cg\",\n            value: \"topic\",\n            onClick: this.onConsumersChoiceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"label-space\",\n            for: \"custcg\",\n            children: \"based on applications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"consumers\",\n          hidden: this.state.DisplayTopicConsumersHidden,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"cg\",\n            children: \"Average number of consuming applications per topic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"cg\",\n            id: \"cg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"consumers\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"cg\",\n            children: \"Total number of topics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"cg\",\n            id: \"cg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"cg\",\n            children: \"Total number of consumer applications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"cg\",\n            id: \"cg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"replicas\",\n        children: \"Number of Replicas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 66\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"replicas\",\n        id: \"replicas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 68\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"replicas\",\n        class: \"small\",\n        children: \"Replicas are used for redundancy. It affects the amount of storage as well as the performance of your Kafka cluster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 62\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 69\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"consumerGroups\",\n        class: \"small\",\n        children: \"A consumer group is a group of related consumers that perform a task, like sending messages to a service. Different consumer groups can read from different offsets in a partition.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 113\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 120\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"laggingConsumers\",\n        children: \"Number of Lagging Consumers:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"laggingConsumers\",\n        id: \"laggingConsumers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"laggingConsumers\",\n        class: \"small\",\n        children: \"Caching of data reduces the need to read data from disk when readers (consumers in consumer groups) read data. However, the size of the cache is finite. When a slow reader tries to read the data, the data may have already been evicted from the cache necessitating a disk read which impacts performance. The more lagging consumers, the more impact on performance.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"laggingConsumers\",\n            class: \"small\",\n            children: \"0 is the best case scenario. 0 means that there are no lagging readers ie, all data are in the cache and the reads do not incur the penalty of reading from disk.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"laggingConsumers\",\n            class: \"small\",\n            children: \"num Consumer Groups + (num Replicas - 1) is the worst case scenario. This implies that all reads from readers of the consumer groups as well as the followers trying to read the data from the leader to store them on their local disk incur the penalty of reading from disk.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"retentionPariod\",\n        children: \"Data Retention Period (number of days):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 93\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"retentionPariod\",\n        id: \"retentionPariod\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 81\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"retentionPariod\",\n        class: \"small\",\n        children: \"This parameter is used to estimate the total storage required for the solution.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 147\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 154\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"zkFailures\",\n        children: \"Number of Zookeeper Node Failures that can be Tolerated (1 or 2):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 114\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"zkFailures\",\n        id: \"zkFailures\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 71\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"zkFailures\",\n        class: \"small\",\n        children: \"A Zookeeper cluster keeps track of status of the Kafka cluster nodes and Kafka topics, partitions etc. The number of Zookeeper nodes is always an odd number: 3, 5, 7, etc. This parameter determines the size of your Zookeeper cluster.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Partition Parameters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"bolder\",\n        children: \"The following are optional parameters for estimating the minimum number of partitions required for a topic. This estimation will be skipped if any of the following fields are left at zero (0).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"topicThroughput\",\n        children: \"Target Throughput of a Topic (MB/s):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 90\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"topicThroughput\",\n        id: \"topicThroughput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 82\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"topicThroughput\",\n        class: \"small\",\n        children: \"This parameter specifies the target throughput for a topic.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"producerThroughput\",\n        children: \"Throughput of the Slowest Producer (MB/s):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 99\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"producerThroughput\",\n        id: \"producerThroughput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 87\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"producerThroughput\",\n        class: \"small\",\n        children: \"This parameter is used to estimate the minimum number of partitions needed for producers to produce the target message throughput.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"consumerThroughput\",\n        children: \"Throughput of the Slowest Consumer (MB/s):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 99\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"consumerThroughput\",\n        id: \"consumerThroughput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 87\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"consumerThroughput\",\n        class: \"small\",\n        children: \"This parameter is used to estimate the minimum number of partitions needed for consumers to consume at the target message throughput.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.callKafkaCalculator,\n        children: \"Compute size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this);\n  } // this function is linked to the radio buttons of the \"throughput\" section\n  // we adjust the display according to the selected radio button\n  // in the memory (setState, which is initialized in the constructor), we store the name and the value of the event\n  // the name is the name of the radio button, and the value is the value of the radio button from the radio button definition\n  // the event.target contains both.  it's also possible to use e.target.name ; e.target.value\n  // the re-rendering is automated  \n\n\n}\n\nexport default CalcForm;","map":{"version":3,"sources":["/development/workspace/internal/ui/myreact-kafka/src/CalcForm.js"],"names":["React","Component","useState","useEffect","setState","CalcForm","constructor","props","onThroughputSelectChange","e","name","value","target","state","throuhputdefault","displayDisableThroughputBox","DisplayMessagesRateAreHidden","document","getElementById","req_inthroughput","displayComputedThroughput","nbmessages","messagesize","msgtimeunit","msgsizeunit","onNetSelectChange","net10default","req_netspeed","onDiskChoiceChange","diskAutoDefault","DisplayAutoDiskHidden","onDiskTypeChange","checked","onConsumersChoiceChange","callKafkaCalculator","fetch","method","body","JSON","stringify","inbound_throughput","replicas","req_replicas","netspeed","netpercent","req_netpercent","diskspeed","req_diskspeed","diskpercent","req_diskpercent","consumers","req_consumers","headers","then","response","json","data","console","log","topicDesc","catch","err","message","initDisplayStates","initRequestStates","initResponseStates","initComputingDisplayStates","DisplayAutoDisHidden","diskSSDDefault","DisplayTopicConsumersHidden","resp_inthroughput","resp_replicas","resp_netspeed","resp_netpercent","resp_diskspeed","resp_diskpercent","resp_consumers","componentDidMount","render"],"mappings":"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","sourcesContent":["import './CalcForm.css';\n\nimport React, { Component, useState, useEffect, setState  } from 'react';\n\nclass CalcForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n\n    this.initDisplayStates();\n    this.initRequestStates();\n    this.initResponseStates();\n    this.initComputingDisplayStates()\n  }\n\n  initDisplayStates() {\n    this.state.throuhputdefault=true;\n    this.state.displayDisableThroughputBox=false;\n    this.state.DisplayMessagesRateAreHidden=true;    \n    this.state.net10default=true;\n    this.state.diskAutoDefault=true;\n    this.state.DisplayAutoDisHidden=false;\n    this.state.diskSSDDefault=true;\n    this.state.DisplayTopicConsumersHidden=true;\n  }\n\n  initRequestStates() {\n    this.state.req_inthroughput=0;\n    this.state.req_replicas=3;\n    this.state.req_netspeed=10;\n    this.state.req_netpercent=80;\n    this.state.req_diskspeed=400;\n    this.state.req_diskpercent=80;\n    this.state.req_consumers=5;\n  }\n\n  initResponseStates() {\n    this.state.resp_inthroughput=0;\n    this.state.resp_replicas=3;\n    this.state.resp_netspeed=10;\n    this.state.resp_netpercent=80;\n    this.state.resp_diskspeed=400;\n    this.state.resp_diskpercent=80;\n    this.state.resp_consumers=5;\n  }  \n\n  initComputingDisplayStates() {\n    this.state.msgtimeunit=1;       // default = second\n    this.state.msgsizeunit=1/1000;    // default = kilobytes\n\n    this.state.nbmessages=0;\n    this.state.messagesize=0;\n  }\n\n  componentDidMount() {\n    document.getElementById(\"disk-ssd\").checked = true;\n    document.getElementById(\"custcg\").checked = true;\n  }\n\n\n  /** \n     render() is the main method of the component\n     it is where the page html is displayed\n     with the binding to the functions that will react to page events\n  */\n  render() {\n\n    // some logic can be added here to compute dynamic value before the return method is called\n\n    \n    return (\n\n        <div className=\"container\">\n          <h1 className=\"title\">Red Hat AMQStreams sizing</h1>\n\n\n                <fieldset class=\"throughput\">\n                    <legend>Inbound throughput</legend>\n\n                    {/* Throughput as absolute or based on messages rate radio button box */}\n                    <input type=\"radio\" id=\"throughput-msg\" name=\"throughput\" value=\"msgsec\" onClick={this.onThroughputSelectChange}/>\n                    <label class=\"label-space\" for=\"throughput-msg\">message based</label><br/>\n                    <input type=\"radio\" id=\"throughput-absolute\" name=\"throughput\" value=\"thru\" checked={this.state.throuhputdefault} onClick={this.onThroughputSelectChange}/>\n                    <label class=\"label-space\" for=\"throughput-absolute\"> absolute value</label><br/>\n                \n                    {/* Throughput box */}\n                    <div class=\"align-absthroughput\"> \n                        <div><label class=\"label-space\" for=\"inboundrate\">Throughput</label>\n                             <input class=\"space-throughput\" type=\"text\" size=\"8\"  name=\"inboundrate\" id=\"inrate\" disabled={this.state.displayDisableThroughputBox}/> \n                             <label class=\"t-in\">MB/sec</label> \n                        </div>\n                    </div> \n                    <br/><br/>\n                    {/* message rate box (when selected by radio button)*/}\n                    <div class=\"align-custthroughput\" hidden={this.state.DisplayMessagesRateAreHidden}> \n                        <div><label class=\"label-space\" for=\"nbmessages\">Number of messages</label> \n                              <input class=\"space-nbmessages\" type=\"text\" size=\"8\" value={this.state.nbmessages} name=\"nbmessages\" id=\"nbmessages\" onInput={this.displayComputedThroughput} /> \n                              <select class=\"space-units\" name=\"msg-time-unit\" id=\"msg-time-unit\" onChange={this.displayComputedThroughput}> \n                                <option value=\"sec\">msg/sec</option> \n                                <option value=\"min\">msg/min</option> \n                              </select> \n                        </div> \n                        \n                        <div><label class=\"label-space\" for=\"messagesize\">Average message size</label> \n                              <input class=\"space-units\" type=\"text\" size=\"8\" value={this.state.messagesize} name=\"messagesize\" id=\"messagesize\" onInput={this.displayComputedThroughput} /> \n                              <select class=\"space-units\" name=\"msg-size-unit\" defaultValue=\"kbytes\" id=\"msg-size-unit\" onChange={this.displayComputedThroughput}> \n                              <option value=\"bytes\">bytes</option> \n                              <option value=\"kbytes\">KB</option> \n                            </select> \n                        </div> \n                    </div> \n                    <br/><br/><br/>                \n                </fieldset>\n                <br/>\n        \n        \n                <fieldset class=\"network\">\n                    <legend>Network Adapter Capabilities</legend>\n                    <div class=\"net\">\n                            <input type=\"radio\" id=\"net-speed-1\" name=\"netspeed\" value=\"1\" onClick={this.onNetSelectChange}/>\n                            <label class=\"label-space\" for=\"net-speed-1\">1 Gbps</label>\n                            <input class=\"net-space\" type=\"radio\" id=\"net-peed-10\" name=\"netspeed\" value=\"10\" checked={this.state.net10default} onClick={this.onNetSelectChange}/>\n                            <label class=\"label-space\" for=\"net-speed-10\">10 Gbps</label>\n                    </div>\n                    <label class=\"label-space\" for=\"netsaturation\">Network saturation</label> \n                    <input class=\"space-units\" type=\"number\"  min=\"1\" max=\"100\" size=\"4\" defaultValue=\"80\" name=\"netsaturation\" id=\"netsaturation\" /> \n                    <label class=\"label-space\" for=\"netsaturation\">%</label> \n                    \n                </fieldset>\n                <br/>\n\n\n                <fieldset class=\"disks\">\n                    <legend>I/O speed</legend>\n                    <div class=\"disk\">\n                            <input type=\"radio\" id=\"disk-choice1\" name=\"diskchoice\" value=\"auto\" checked={this.state.diskAutoDefault} onClick={this.onDiskChoiceChange}/>\n                            <label class=\"label-space\" for=\"disk-choice1\">auto</label>\n                            <input class=\"net-space\" type=\"radio\" id=\"disk-choice2\" name=\"diskchoice\" value=\"custom\" onClick={this.onDiskChoiceChange}/>\n                            <label class=\"label-space\" for=\"disk-choice2\">custom</label>\n                    </div>\n                    <div class=\"align-disks\" hidden={this.state.DisplayAutoDiskHidden}>\n                        <input type=\"radio\" id=\"disk-ussd\" name=\"disktype\" value=\"ussd\" onClick={this.onDiskTypeChange}/>\n                        <label class=\"label-space\" for=\"disk-ussd\">Xtreme (1000MB/s)</label>\n                        <input class=\"disk-space\" type=\"radio\" id=\"disk-ssd\" name=\"disktype\" value=\"ssd\" onClick={this.onDiskTypeChange} />\n                        <label class=\"label-space\" for=\"disk-ssd\">SSD (400MB/s)</label>\n                        <input class=\"disk-space\" type=\"radio\" id=\"disk-uhigh\" name=\"disktype\" value=\"uhigh\" onClick={this.onDiskTypeChange}/>\n                        <label class=\"label-space\" for=\"disk-uhigh\">Ultra I/O (250MB/s)</label>   \n                        <input class=\"disk-space\" type=\"radio\" id=\"disk-high\" name=\"disktype\" value=\"high\" onClick={this.onDiskTypeChange}/>\n                        <label class=\"label-space\" for=\"disk-high\">High I/O (150MB/s)</label>      \n                        <input class=\"disk-space\" type=\"radio\" id=\"disk-std\" name=\"disktype\" value=\"std\" onClick={this.onDiskTypeChange}/>\n                        <label class=\"label-space\" for=\"disk-std\">Standard (50MB/s)</label>      \n                    </div>\n                    <br/>\n                        <label class=\"label-space\" for=\"nbdisks\">Number of disk in parallel</label> \n                        <input class=\"space-units\" type=\"number\"  min=\"1\" max=\"10\" size=\"4\" defaultValue=\"1\" name=\"nbdisks\" id=\"nbdisks\" /> \n                        <br/>                 \n                        <label class=\"label-space\" for=\"disksaturation\">I/O saturation</label> \n                        <input class=\"space-units\" type=\"number\" min=\"1\" max=\"100\" size=\"4\" defaultValue=\"80\" name=\"disksaturation\" id=\"disksaturation\" /> \n                        <label class=\"label-space\" for=\"disksaturation\">%</label> \n\n                    </fieldset>\n                <br/>\n\n\n                <fieldset class=\"consumers\">\n                    <legend>Messages delivery</legend>\n                    <div class=\"consumers\">\n                            <input type=\"radio\" id=\"abscg\" name=\"cg\" value=\"ratio\" onClick={this.onConsumersChoiceChange}/>\n                            <label class=\"label-space\" for=\"abscg\">ratio</label>\n                            <input class=\"cg-space\" type=\"radio\" id=\"custcg\" name=\"cg\" value=\"topic\" onClick={this.onConsumersChoiceChange}/>\n                            <label class=\"label-space\" for=\"custcg\">based on applications</label>\n                    </div>                    \n                    <div class=\"consumers\" hidden={this.state.DisplayTopicConsumersHidden}>   \n                        <label for=\"cg\">Average number of consuming applications per topic</label>\n                        <input type=\"text\" name=\"cg\" id=\"cg\" />\n                    </div>\n                    <div class=\"consumers\">   \n                        <label for=\"cg\">Total number of topics</label>\n                        <input type=\"text\" name=\"cg\" id=\"cg\" />\n                        <label for=\"cg\">Total number of consumer applications</label>\n                        <input type=\"text\" name=\"cg\" id=\"cg\" />\n                    </div>                    \n                    <br/>\n                </fieldset>\n\n\n\n\n\n\n                <label for=\"replicas\">Number of Replicas:</label><br/>\n                <input type=\"text\" name=\"replicas\" id=\"replicas\" /><br/>\n                \n                <label for=\"replicas\" class=\"small\">Replicas are used for redundancy. It affects the amount of storage as well as \n                the performance of your Kafka cluster</label><p></p><br/>        \n\n\n                \n                <label for=\"consumerGroups\" class=\"small\">A consumer group is a group of related consumers that perform a task, like sending messages to \n                    a service. Different consumer groups can read from different offsets in a partition.</label><p></p><br/>        \n        \n\n\n                <label for=\"laggingConsumers\">Number of Lagging Consumers:</label><br/>\n                <input type=\"text\" name=\"laggingConsumers\" id=\"laggingConsumers\"/><br/>\n                \n                <label for=\"laggingConsumers\" class=\"small\">Caching of data reduces the need to read data from disk when readers (consumers in consumer groups) \n                    read data. However, the size of the cache is finite. When a slow reader tries to read the data, the data may have already been \n                    evicted from the cache necessitating a disk read which impacts performance. The more lagging consumers, the more impact on performance.\n                </label>\n                <ul>\n                    <li>\n                        <label for=\"laggingConsumers\" class=\"small\">0 is the best case scenario. 0 means that there are no lagging readers ie, \n                            all data are in the cache and the reads do not incur the penalty of reading from disk.\n                        </label>\n                    </li><br/>\n                    <li>\n                        <label for=\"laggingConsumers\" class=\"small\">num Consumer Groups + (num Replicas - 1) is the worst case scenario.\n                            This implies that all reads from readers of the consumer groups as well as the followers trying to read the data from the leader \n                            to store them on their local disk incur the penalty of reading from disk.\n                        </label>\n                    </li>\n                </ul>\n                <p></p><br/>        \n        \n                <label for=\"retentionPariod\">Data Retention Period (number of days):</label><br/>\n                <input type=\"text\" name=\"retentionPariod\" id=\"retentionPariod\"/><br/>\n                \n                <label for=\"retentionPariod\" class=\"small\">This parameter is used to estimate the total storage required for the solution.</label><p></p><br/>        \n                \n        \n                <label for=\"zkFailures\">Number of Zookeeper Node Failures that can be Tolerated (1 or 2):</label><br/>\n                <input type=\"text\" name=\"zkFailures\" id=\"zkFailures\"/><br/>\n                \n                <label for=\"zkFailures\" class=\"small\">A Zookeeper cluster keeps track of status of the Kafka cluster nodes and Kafka topics, \n                    partitions etc. The number of Zookeeper nodes is always an odd number: 3, 5, 7, etc. This parameter determines the size of your \n                    Zookeeper cluster.\n                </label><p></p><hr/>\n                \n                <h2>Partition Parameters</h2>\n                <p class=\"bolder\">The following are optional parameters for estimating the minimum number of partitions required for a topic. This estimation will\n                be skipped if any of the following fields are left at zero (0).\n                </p>\n                <p></p>\n                \n                <label for=\"topicThroughput\">Target Throughput of a Topic (MB/s):</label><br/>\n                <input type=\"text\" name=\"topicThroughput\" id=\"topicThroughput\" /><br/>\n                \n                <label for=\"topicThroughput\" class=\"small\"> \n                    This parameter specifies the target throughput for a topic.  \n                </label><p></p><br/>      \n        \n                <label for=\"producerThroughput\">Throughput of the Slowest Producer (MB/s):</label><br/>\n                <input type=\"text\" name=\"producerThroughput\" id=\"producerThroughput\"/><br/>\n                \n                <label for=\"producerThroughput\" class=\"small\"> \n                    This parameter is used to estimate the minimum number of partitions needed for producers to produce the target message throughput.\n                </label><p></p><br/>        \n        \n                <label for=\"consumerThroughput\">Throughput of the Slowest Consumer (MB/s):</label><br/>\n                <input type=\"text\" name=\"consumerThroughput\" id=\"consumerThroughput\"/><br/>\n                \n                <label for=\"consumerThroughput\" class=\"small\">This parameter is used to estimate the minimum number of partitions needed for consumers to\n                consume at the target message throughput.\n                </label><p></p>\n                <hr/>        \n        \n                <button type=\"submit\" onClick={this.callKafkaCalculator}>Compute size</button>\n            \n        </div>\n      );\n  }\n\n\n  // this function is linked to the radio buttons of the \"throughput\" section\n  // we adjust the display according to the selected radio button\n  // in the memory (setState, which is initialized in the constructor), we store the name and the value of the event\n  // the name is the name of the radio button, and the value is the value of the radio button from the radio button definition\n  // the event.target contains both.  it's also possible to use e.target.name ; e.target.value\n  // the re-rendering is automated  \n  onThroughputSelectChange = (e) => {\n    \n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n\n    // we need to adject the 'checked' value of th radio button for the next rendering\n    if (e.target.value===\"thru\") {\n        this.state.throuhputdefault=true;\n        this.state.displayDisableThroughputBox=false;\n        this.state.DisplayMessagesRateAreHidden=true;\n    }\n    if (e.target.value===\"msgsec\") {\n        this.state.throuhputdefault=false;\n        this.state.displayDisableThroughputBox=true;\n        this.state.DisplayMessagesRateAreHidden=false;\n        document.getElementById(\"inrate\").value = this.state.req_inthroughput;\n    }\n  }\n\n  displayComputedThroughput = (e) => {    \n    \n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });  \n\n    switch (e.target.name) {\n        case \"nbmessages\": \n            this.state.nbmessages = e.target.value;\n            break;\n        case \"messagesize\":\n            this.state.messagesize = e.target.value;\n            break;\n        case \"msg-time-unit\": \n            if (e.target.value==\"sec\")  //TODO: hour, day\n                this.state.msgtimeunit = 1;      \n            if (e.target.value==\"min\")  //TODO: hour, day\n                this.state.msgtimeunit = 60;\n            break;\n        case \"msg-size-unit\": \n            if (e.target.value==\"bytes\")  //TODO: ?\n                this.state.msgsizeunit = 1/1000000;\n            if (e.target.value==\"kbytes\")  //TODO: ?\n                this.state.msgsizeunit = 1/1000;  \n            break;\n        default: break;\n    };\n    \n    this.state.req_inthroughput = this.state.nbmessages * this.state.msgtimeunit * this.state.messagesize * this.state.msgsizeunit;\n    document.getElementById(\"inrate\").value = this.state.req_inthroughput;\n  };     \n  \n\n  onNetSelectChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n    if (e.target.value===\"1\") {\n        this.state.net10default=false;\n        this.state.req_netspeed=1;\n    }\n    if (e.target.value===\"10\") {\n        this.state.net10default=true;\n        this.state.req_netspeed=10;\n    }    \n  }\n\n  onDiskChoiceChange = (e) => {\n\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n    if (e.target.value===\"auto\") {\n        this.state.diskAutoDefault=true;\n        this.state.DisplayAutoDiskHidden=false;\n    }\n    if (e.target.value===\"custom\") {\n        this.state.diskAutoDefault=false;\n        this.state.DisplayAutoDiskHidden=true;\n    }    \n  }\n\n  onDiskTypeChange = (e) => {\n\n    switch (e.target.value) {\n        case \"ussd\": document.getElementById(\"disk-ussd\").checked = true; break;\n        case \"ssd\": document.getElementById(\"disk-ssd\").checked = true; break;\n        case \"uhigh\": document.getElementById(\"disk-uhigh\").checked = true; break;\n        case \"high\": document.getElementById(\"disk-high\").checked = true; break;\n      }\n  }\n\n  onConsumersChoiceChange = (e) => {\n\n  }\n\n  callKafkaCalculator = () => {\n\n    fetch('http://localhost:8090/api/kafkasizing', {\n      method: 'POST',\n      body: JSON.stringify({\n        inbound_throughput: this.state.req_inthroughput,\n        replicas: this.state.req_replicas,\n        netspeed: this.state.req_netspeed,\n        netpercent: this.state.req_netpercent,\n        diskspeed: this.state.req_diskspeed,\n        diskpercent: this.state.req_diskpercent,\n        consumers: this.state.req_consumers\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n      })\n      .then((response) => response.json())\n      .then((data) => {\n          console.log(data);\n          console.log(data.topicDesc.consumers);\n\n        //setPosts((posts) => [data, ...posts]);\n        //setTitle('');\n        //setBody('');\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  }    \n} \n\nexport default CalcForm;"]},"metadata":{},"sourceType":"module"}