{"ast":null,"code":"var _jsxFileName = \"/development/workspace/internal/ui/myreact-kafka/src/KafkaClusterDetails.js\";\nimport './KafkaClusterDetails.css';\nimport React, { Component, useState, useEffect, setState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass KafkaClusterDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {}\n  /** \n     render() is the main method of the component\n     it is where the page html is displayed\n     with the binding to the functions that will react to page events\n  */\n\n\n  render() {\n    // some logic can be added here to compute dynamic value before the return method is called\n    var overload_str = \"\";\n    if (this.props.cluster_overload != null) this.props.cluster_overload.forEach(entry => {\n      overload_str += entry;\n      overload_str += \"\\n\";\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"warnings\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cluster warnings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"overload\",\n          children: [this.props.cluster_overload != null && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [overload_str, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No warnings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"plane\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Planes details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"planeleft\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  colspan: \"3\",\n                  children: \"Control plane (Zookeeper)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Number of node\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"CPU per node\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"memory per node\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: this.props.zk_nb\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: this.props.zk_cpu\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: this.props.zk_mem\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"planeright\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  colspan: \"3\",\n                  children: \"Data plane (Brokers)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Number of node\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"CPU per node\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"memory per node\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: this.props.broker_nb\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: this.props.broker_cpu\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: this.props.broker_mem\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"settings\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cluster settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"sleft\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  colspan: \"2\",\n                  children: \"Cluster-wide characteristics\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [overload_str != \"\" && /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Cluster overload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [overload_str, \" || none\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Persistent storage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: this.props.cluster_sto\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Maximum outbound throuhput\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [this.props.cluster_maxout, \" MB/s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"sright\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  colspan: \"5\",\n                  children: \"Performance data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Replication factor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: this.props.t_replicas\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Insync replicas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: this.props.t_insync\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"partitions per node\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: this.props.t_pnode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"partitions in parallel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: this.props.t_parallel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"cpu share per partition\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: this.props.t_cpushare\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default KafkaClusterDetails;","map":{"version":3,"sources":["/development/workspace/internal/ui/myreact-kafka/src/KafkaClusterDetails.js"],"names":["React","Component","useState","useEffect","setState","KafkaClusterDetails","constructor","props","state","componentDidMount","render","overload_str","cluster_overload","forEach","entry","zk_nb","zk_cpu","zk_mem","broker_nb","broker_cpu","broker_mem","cluster_sto","cluster_maxout","t_replicas","t_insync","t_pnode","t_parallel","t_cpushare"],"mappings":"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","sourcesContent":["import './KafkaClusterDetails.css';\n\nimport React, { Component, useState, useEffect, setState  } from 'react';\n\nclass KafkaClusterDetails extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n\n  }\n\n  componentDidMount() {\n    \n  }\n\n\n  /** \n     render() is the main method of the component\n     it is where the page html is displayed\n     with the binding to the functions that will react to page events\n  */\n  render() {\n\n    // some logic can be added here to compute dynamic value before the return method is called\n\n        var overload_str = \"\";\n        if (this.props.cluster_overload != null)\n          this.props.cluster_overload.forEach(entry => {\n            overload_str+=entry;\n            overload_str+=\"\\n\";\n          });\n\n        return (\n  \n          <div className=\"container\">\n            <div class=\"warnings\"> \n              <h3>Cluster warnings</h3> \n              <div class=\"overload\">\n                \n                  {/*Conditional rendering*/}\n                  {this.props.cluster_overload != null && \n                    <p>{overload_str} </p>\n                  }          \n                  <p>No warnings</p>\n              </div>              \n            </div>     \n            <br/><br/>                 \n            <div class=\"plane\">       \n              <h3>Planes details</h3>     \n              <div class=\"planeleft\">\n                <table>\n                  <thead>\n                    <tr>\n                        <th colspan=\"3\">Control plane (Zookeeper)</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                        <td>Number of node</td>\n                        <td>CPU per node</td>\n                        <td>memory per node</td>\n                    </tr>\n                    <tr>\n                        <td>{this.props.zk_nb}</td>                  \n                        <td>{this.props.zk_cpu}</td>\n                        <td>{this.props.zk_mem}</td>\n                    </tr>                \n                  </tbody>\n                </table>\n              </div>\n              <div class=\"planeright\">\n                <table>\n                  <thead>\n                    <tr>\n                        <th colspan=\"3\">Data plane (Brokers)</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                        <td>Number of node</td>\n                        <td>CPU per node</td>\n                        <td>memory per node</td>\n                    </tr>\n                    <tr>\n                        <td>{this.props.broker_nb}</td>                  \n                        <td>{this.props.broker_cpu}</td>\n                        <td>{this.props.broker_mem}</td>\n                    </tr>                \n                  </tbody>\n                </table>\n              </div>\n            </div>\n            <br/><br/>\n            <div class=\"settings\"> \n              <h3>Cluster settings</h3> \n              <div class=\"sleft\">\n                <table>\n                  <thead>\n                    <tr>\n                        <th colspan=\"2\">Cluster-wide characteristics</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {/*Conditional rendering*/}\n                    {overload_str != \"\" &&\n                            <tr>\n                              <td>Cluster overload</td>\n                              <td>{overload_str} || none</td>\n                            </tr>            \n                          }                  \n                    <tr>\n                        <td>Persistent storage</td>\n                        <td>{this.props.cluster_sto}</td>     \n                    </tr>\n                    <tr>\n                        <td>Maximum outbound throuhput</td>\n                        <td>{this.props.cluster_maxout} MB/s</td>     \n                    </tr>                    \n            \n                  </tbody>\n                </table>\n                \n              </div>\n              <div class=\"sright\">\n                <table>\n                  <thead>\n                    <tr>\n                        <th colspan=\"5\">Performance data</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                        <td>Replication factor</td>\n                        <td>{this.props.t_replicas}</td> \n                    </tr>\n                    <tr>\n                        <td>Insync replicas</td>                   \n                        <td>{this.props.t_insync}</td>\n                    </tr>  \n                    <tr>\n                        <td>partitions per node</td>\n                        <td>{this.props.t_pnode}</td>\n                    </tr> \n                    <tr>\n                        <td>partitions in parallel</td>                   \n                        <td>{this.props.t_parallel}</td>\n                    </tr>  \n                    <tr>\n                        <td>cpu share per partition</td>\n                        <td>{this.props.t_cpushare}</td>\n                    </tr>                             \n                  </tbody>\n                </table>  \n                <br/>\n              </div> \n            </div>  \n            \n          </div>\n       )\n  \n  }\n\n\n} \n\nexport default KafkaClusterDetails;"]},"metadata":{},"sourceType":"module"}