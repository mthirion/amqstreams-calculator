{"ast":null,"code":"var _jsxFileName = \"/development/workspace/internal/ui/myreact-kafka/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const url = \"https://jsonplaceholder.typicode.com/posts\";\n    fetch(url).then(response => response.json()).then(json => this.setState({\n      posts: json\n    }));\n  }\n\n  render() {\n    const {\n      posts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(CalcForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/development/workspace/internal/ui/myreact-kafka/src/App.js"],"names":["logo","React","Component","App","constructor","props","state","componentDidMount","url","fetch","then","response","json","setState","posts","render"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAE1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GAAG,4CAAZ;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEC,MAAAA,KAAK,EAAEF;AAAT,KAAd,CAFd;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAED,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,wBACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAnByB;;AAqB5B,eAAeH,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport React, { Component } from 'react';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n  \n  componentDidMount() {\n    const url = \"https://jsonplaceholder.typicode.com/posts\";\n    fetch(url)\n    .then(response => response.json())\n    .then(json => this.setState({ posts: json }))\n  }\n\n  render() {\n    const { posts } = this.state;\n    return (\n      <CalcForm/>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}